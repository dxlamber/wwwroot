概念：
 有这么一个对象，它
        是一个TCP socket的抽象对象。
        是一个双工流（可读可写流）对象。双工流是有两条流通道，两个缓冲区。
 创建这样一个对象：
        new net.Socket([options])
 拥有的事件接口：
        一些从流继承的事件：data, drain 等等。
        Socket本身特有的事件：
                close: 当这个socket完全被关闭的时候触发。
                connect: 当这个socket的链接成功建立的时候触发。
                TCP的建立过程，A端发起请求，B端回应OK，但是B端并不能确信自己的OK回应是否被A端收到，所以A端在收到B端OK回应后，要回送B端一个收到B端OK回应的回应。俗称三次握手。
                end: 当接收到socket对端发过来一个FIN报文包的时候触发。
                TCP的链接关闭过程，A端发一个FIN包，B端发一个回应包，切断A到B方向的流。B端发一个FIN包，A端发一个回应包，切断B到A方向的流。

来做一个demo，
一端准备要建立socket的配置信息，创建链接，得到返回的socket对象。

另一端创建轮询程序，等待请求的到来。
        1. 有请求到来，自动执行TCP建立链接的三次包应答。
        2. 三次应答成功之后，TCP成功建立，创建socket对象，并触发socket对象的connect事件。